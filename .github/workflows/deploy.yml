name: Deploy

env:
  VERCEL_ORG_ID: ${{ secrets.VERCEL_ORG_ID }}
  VERCEL_PROJECT_ID: ${{ secrets.VERCEL_PROJECT_ID }}

on:
  push:
    branches:
      - main
      - staging

jobs:
  analyze:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v2
      
      - name: Setup Node.js
        uses: actions/setup-node@v2
        with:
          node-version: '20'
      
      - name: Install dependencies
        run: |
          npm install
          npm install -g sonarqube-scanner
      
      - name: Run tests and analyze
        run: |
          npm run test
          npm run test:cov
          sonar-scanner \
            -Dsonar.projectKey=${{ secrets.SONAR_PROJECT_KEY }} \
            -Dsonar.sources=. \
            -Dsonar.host.url=${{ secrets.SONAR_HOST_URL }} \
            -Dsonar.login=${{ secrets.SONAR_LOGIN }} \
            -Dsonar.javascript.lcov.reportPaths=coverage/lcov.info \
            -Dsonar.genericcoverage.testExecutionReportPaths=reports/test-report.xml \
            -Dsonar.coverage.exclusions=**/*spec.ts
      
    if: github.ref == 'refs/heads/main' || github.ref == 'refs/heads/staging'

  deploy_production:
    runs-on: ubuntu-latest
    needs: analyze
    if: github.ref == 'refs/heads/main'
    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Deploy to production with Vercel
        run: |
          npm install -g vercel
          vercel pull --yes --environment=production --token=${{ secrets.VERCEL_TOKEN }}
          vercel build --prod --token=${{ secrets.VERCEL_TOKEN }}
          vercel deploy --prebuilt --prod --token=${{ secrets.VERCEL_TOKEN }}

  deploy_staging:
    runs-on: ubuntu-latest
    needs: analyze
    if: github.ref == 'refs/heads/staging'
    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Deploy to staging with Vercel
        run: |
          npm install -g vercel
          vercel pull --yes --environment=preview --token=${{ secrets.VERCEL_TOKEN }}
          vercel build --token=${{ secrets.VERCEL_TOKEN }}
          url=$(vercel deploy --prebuilt --token=${{ secrets.VERCEL_TOKEN }} | grep "https://")
          vercel alias --token=${{ secrets.VERCEL_TOKEN }} set "$url" api-talacare-staging.vercel.app --scope=${{ secrets.VERCEL_ORG_ID }}
